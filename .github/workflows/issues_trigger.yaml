name: Issue Trigger
on:
  issues:
    types: [opened, assigned, labeled, unlabeled]
jobs:
  #   trigger for issues that are labeled
  Add-New-Comment-For-Feature-Issue:
    if: "${{github.event.label.name == 'feature: feature branch' && github.event.action == 'labeled'}}"
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      # uses checkout
      - uses: actions/checkout@v4
      # add comment
      - name: Add new label comment
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./github-actions/issue-trigger/update-comments/add-comments.js')
            script({g: github, c: context})
  Hide-Comment-For-Feature-Issue:
    if: "${{github.event.action == 'unlabeled' && github.event.label.name == 'feature: feature branch'}}"
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Add comment
        run: gh issue comment "$NUMBER" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          ISSUE: ${{ github.event.issue.comments }}
          BODY: >
            The commment should be removed

# TODO
# github.rest.issues.listforrepo
# create-new-issue.js
# The github global variable passed in will allow us to get the token
# Use this along with the find comment to fetch comments

# - name: Run script
#   env:
#     TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   run: |
#     node .github/actions-scripts/use-the-api.mjs

# const octokit = new Octokit({
#   auth: process.env.TOKEN,
# });
