name: Issue Trigger
on:
  issues:
    types:
      - opened
      - labeled
      - unlabeled
      - closed
      - unassigned
      - assigned
jobs:
  # Adds newly created issues onto project board in the default column 'New Issue Approval'
  # unless overridden when issue has "LA website bot" in title, then 'Questions / In Review'
  Add-Missing-Labels-To-Issues:
    runs-on: ubuntu-latest
    # Only trigger this action when an issue is newly created
    if: ${{ github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'transferred')}}
    steps:
      - uses: actions/checkout@v4
      # Check if the issue has required labels
      - name: Check Labels
        id: check-labels
        uses: actions/github-script@v7
        with:
          script: |
            const script = 'add missing label'
            console.log(script)
            return script

  #Asking for preliminary update when issue is assigned
  Ask-For-Preliminary-update:
    runs-on: ubuntu-latest
    #Triggers when the issue is newly assigned
    if: ${{ github.event_name == 'issues' && github.event.action == 'assigned'}}
    steps:
      - uses: actions/checkout@v4

      # Check if the issue has the required roles
      - name: Check Labels Prelim
        uses: actions/github-script@v7
        id: check-labels-prelim
        with:
          script: |
            const script = 'ask for update missing label'
            console.log(script)
            return script

  #   trigger for issues that are labeled and should be commented
  Add-New-Comment-For-Feature-Issue:
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'issues' && (github.event.action == 'labeled' && github.event.label.name == 'feature: feature branch')}}"
    env:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      issues: write
    steps:
      # uses checkout
      - uses: actions/checkout@v4
      # add comment
      - name: Add new label comment
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./github-actions/issue-trigger/update-comments/add-comments.js')
            const addComment = script({g: github, c: context})
            return addComment
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT
  # trigger to Hide a comment once label is removed
  Hide-Comment-For-Feature-Issue:
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'issues' && (github.event.action == 'unlabeled' && github.event.label.name == 'feature: feature branch')}}"
    permissions:
      issues: write
    steps:
      # uses checkout
      - uses: actions/checkout@v4
      # add comment
      - name: outdate the comment label
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./github-actions/issue-trigger/update-comments/outdate-comments.js')
            const outdateComment = script({g: github, c: context})
            return outdateComment

  # Test-Close-Issue:
  #   runs-on: ubuntu-latest
  #   if: "${{ github.event_name == 'issues' && (github.event.action == 'closed' || github.event.action == 'opened' || github.event.action == 'assigned' || github.event.action == 'unassigned')}}"
  #   permissions:
  #     issues: read
  #   steps:
  #     # uses checkout
  #     - uses: actions/checkout@v4

  #     - name: Find the prework issue workflow
  #       uses: /.github/workflows/reusable_comment_workflow.yaml@master

  Test-Issue:
    if: "${{ github.event_name == 'issues' && (github.event.action == 'closed' || github.event.action == 'opened' || github.event.action == 'assigned' || github.event.action == 'unassigned')}}"
    permissions:
      issues: write
    uses:
      partapparam/evalApi/.github/workflows/reusable_comment_workflow.yaml@master
      # add comment
      # - name: Activity on Issue
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       console.log(context.payload.issue)
# Issue Object

# MARKED AS COMPLETED
# state: 'closed',
# state_reason: 'completed',

# Marked as not planned
# {
#   active_lock_reason: null,
#   assignee: null,
#   assignees: [],
#   author_association: 'OWNER',
#   body: null,
#   closed_at: '2024-05-13T23:54:20Z',
#   comments: 0,
#   comments_url: 'https://api.github.com/repos/partapparam/evalApi/issues/14/comments',
#   created_at: '2024-05-13T23:54:11Z',
#   events_url: 'https://api.github.com/repos/partapparam/evalApi/issues/14/events',
#   html_url: 'https://github.com/partapparam/evalApi/issues/14',
#   id: 2294051738,
#   labels: [],
#   labels_url: 'https://api.github.com/repos/partapparam/evalApi/issues/14/labels{/name}',
#   locked: false,
#   milestone: null,
#   node_id: 'I_kwDOJyGIJc6IvHOa',
#   number: 14,
#   performed_via_github_app: null,
#   reactions: {
#     '+1': 0,
#     '-1': 0,
#     confused: 0,
#     eyes: 0,
#     heart: 0,
#     hooray: 0,
#     laugh: 0,
#     rocket: 0,
#     total_count: 0,
#     url: 'https://api.github.com/repos/partapparam/evalApi/issues/14/reactions'
#   },
#   repository_url: 'https://api.github.com/repos/partapparam/evalApi',
#   state: 'closed',
#   state_reason: 'not_planned',
#   timeline_url: 'https://api.github.com/repos/partapparam/evalApi/issues/14/timeline',
#   title: 'test',
#   updated_at: '2024-05-13T23:54:20Z',
#   url: 'https://api.github.com/repos/partapparam/evalApi/issues/14',
#   user: {
#     avatar_url: 'https://avatars.githubusercontent.com/u/24577323?v=4',
#     events_url: 'https://api.github.com/users/partapparam/events{/privacy}',
#     followers_url: 'https://api.github.com/users/partapparam/followers',
#     following_url: 'https://api.github.com/users/partapparam/following{/other_user}',
#     gists_url: 'https://api.github.com/users/partapparam/gists{/gist_id}',
#     gravatar_id: '',
#     html_url: 'https://github.com/partapparam',
#     id: 24577323,
#     login: 'partapparam',
#     node_id: 'MDQ6VXNlcjI0NTc3MzIz',
#     organizations_url: 'https://api.github.com/users/partapparam/orgs',
#     received_events_url: 'https://api.github.com/users/partapparam/received_events',
#     repos_url: 'https://api.github.com/users/partapparam/repos',
#     site_admin: false,
#     starred_url: 'https://api.github.com/users/partapparam/starred{/owner}{/repo}',
#     subscriptions_url: 'https://api.github.com/users/partapparam/subscriptions',
#     type: 'User',
#     url: 'https://api.github.com/users/partapparam'
#   }
# }
