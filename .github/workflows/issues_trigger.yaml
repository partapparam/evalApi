name: Issue Trigger
on:
  issues:
    types: [opened, assigned, labeled, unlabeled]
jobs:
  # Adds newly created issues onto project board in the default column 'New Issue Approval'
  # unless overridden when issue has "LA website bot" in title, then 'Questions / In Review'
  Add-Missing-Labels-To-Issues:
    runs-on: ubuntu-latest
    # Only trigger this action when an issue is newly created
    if: ${{ github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'transferred')}}
    steps:
      - uses: actions/checkout@v4
      # Check if the issue has required labels
      - name: Check Labels
        id: check-labels
        uses: actions/github-script@v7
        with:
          script: |
            const script = 'add missing label'
            console.log(script)

  #Asking for preliminary update when issue is assigned
  Ask-For-Preliminary-update:
    runs-on: ubuntu-latest
    #Triggers when the issue is newly assigned
    if: ${{ github.event_name == 'issues' && github.event.action == 'assigned'}}
    steps:
      - uses: actions/checkout@v4

      # Check if the issue has the required roles
      - name: Check Labels Prelim
        uses: actions/github-script@v7
        id: check-labels-prelim
        with:
          script: |
            const script = 'ask for update missing label'
            console.log(script)

  #   trigger for issues that are labeled and should be commented
  Add-New-Comment-For-Feature-Issue:
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'issues' && (github.event.action == 'labeled' && github.event.label.name == 'feature: feature branch')}}"
    env:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      issues: write
    steps:
      # uses checkout
      - uses: actions/checkout@v4
      # add comment
      - name: Add new label comment
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./github-actions/issue-trigger/update-comments/add-comments.js')
            script({g: github, c: context})
  # trigger to Hide a comment once label is removed
  Hide-Comment-For-Feature-Issue:
    runs-on: ubuntu-latest
    if: "${{ github.event_name == 'issues' && (github.event.action == 'unlabeled' && github.event.label.name == 'feature: feature branch')}}"
    permissions:
      issues: write
    steps:
      # uses checkout
      - uses: actions/checkout@v4
      # add comment
      - name: outdate the comment label
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./github-actions/issue-trigger/update-comments/outdate-comments.js')
            script({g: github, c: context})

# TODO
# github.rest.issues.listforrepo
# create-new-issue.js
# The github global variable passed in will allow us to get the token
# Use this along with the find comment to fetch comments

# - name: Run script
#   env:
#     TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   run: |
#     node .github/actions-scripts/use-the-api.mjs

# const octokit = new Octokit({
#   auth: process.env.TOKEN,
# });

# TOOLS USED
# find-comment action
# hider-comment / comment-hider action
